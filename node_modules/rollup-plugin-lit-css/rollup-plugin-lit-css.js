import { createFilter } from "rollup-pluginutils";
import { transform } from "@pwrs/lit-css";
import { resolve } from "path";
function litCss(options) {
  const {
    exclude,
    include = /\.css$/i,
    uglify,
    specifier,
    tag,
    ...rest
  } = options ?? {};
  const filter = createFilter(include, exclude);
  return {
    name: "lit-css",
    load(id) {
      if (filter(id))
        this.addWatchFile(resolve(id));
      return null;
    },
    async transform(css, id) {
      if (!filter(id))
        return null;
      try {
        const code = await transform({ css, specifier, tag, uglify, filePath: id, ...rest });
        return { code, map: { mappings: "" } };
      } catch (error) {
        this.error(error.message, {
          column: parseInt(error.column),
          line: parseInt(error.line)
        });
      }
    }
  };
}
var rollup_plugin_lit_css_default = litCss;
export {
  rollup_plugin_lit_css_default as default,
  litCss
};
//# sourceMappingURL=rollup-plugin-lit-css.js.map
